МОЖНО ДОПОЛНЯТЬ ИЛИ УБИРАТЬ ТО, ЧТО ЛИЧНО ДЛЯ ВАС НЕ АКТУАЛЬНО

01) Указана ли версия HTML - инструкция <!DOCTYPE html>
02) Указана ли основная локализация и язык сайта (атрибут lang у тега html)
03) Указана ли кодировка документа (атрибут charset у тега meta в head)
04) Проверили ли валидность HTML на w3c и css с помощью CSSLint
05) Соблюдены ли при вёрстке отступы и структурность. Между тегами одного уровня желательно делать отступ в одну строку. Это поможет легче читать код и легче находить нужные блоки кода.
06) Использованы ли header, main и footer для разметки важных частей сайта.
07) Соблюдена ли при вёрстке семантика, нет ли «div’атоза». Используйте div только для позиционирования элементов или если никакой другой тег по смыслу не подходит.
08) Прописан ли атрибут alt у контентных изображений, есть ли подробные описания изображений.
09) Все ли стили прописаны через селектор класса. Не используйте теги и id. Исключение: допустимо прописать по тегу глобальные стили для сайта — сброс отступов, наследование некоторых стилей.
10) Использование компонентного подхода БЭМ (Блок-Элемент-Модификатор)
11) Соблюдается ли иерархия заголовков
Проверять иерархию заголовков и БЭМ удобно на сайте https://yoksel.github.io/html-tree/
12) Проверить использование шрифтов форматов woff2 и woff
13) Прописаны ли запасные шрифты и семейство шрифтов в CSS.
14) Имеются ли на всех интерактивных элементах hover эффекты, focus, active и disabled.
15) В css не должно быть !important.
16) В вёрстке не должно быть пустых элементов вроде
<div></div>
<span></span>
17) Не используйте <br> и <hr>, их задачу решает CSS.
18) input должен быть связан с label.
19) В проекте в именах файлов и папок не должно содержаться пробелов, а все файлы должны быть подписаны латиницей.
20) Имена классов сами говорят за себя, не используйте транскрипцию русских слов по типу “knopka”.
Вот здесь подробная шпаргалка по именованию классов: https://github.com/yoksel/common-words
21) Оптимизированы ли изображения по весу.
Предпочтительно использовать современные форматы webp и avif.
22) Не всегда внешний вид элемента подскажет какой элемент использовать. Элемент определяется его назначением, действием. Так, ссылка <a> куда-то нас отправляет, <button> выполняет скрипт — например, открытие модального окна или меню.
23) Реализована ли адаптивность.
Проверяйте вёрстку на всех разрешениях, от 320px до 4к.
24) Обеспечена ли кроссбраузерность.
Проверяйте вёрстку на различных устройствах и браузерах, не забывайте прописывать вендорные префиксы.
25) Помните про ретина-дисплеи — подготовьте и правильно подключите изображения для них.
26) Проверьте на переполнение.
Можно задать body атрибут contenteditable и вставлять текст во все блоки для проверки. Не забудьте его убрать!